# This is a basic workflow to help you get started with Actions
name: Build Jar

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+*' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout code for later image build
      uses: actions/checkout@v2
      
    - uses: actions/setup-java@v1
      with:
        java-version: 14

    - run: ./gradlew wrapper --gradle-version=6.3 build

    - name: Build Jar
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: build/libs/*.jar
    - name: Delete Latest 
      uses: ame-yu/action-delete-latest-release@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} 
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
#         tag_name: ${{ github.ref }}
        tag_name: release
        release_name: Release
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/libs/etoro-api-0.1.2.jar
        asset_name: etoro-api-0.1.2.jar
        asset_content_type: application/java-archive
#     - name: Build and push Docker images
#       uses: docker/build-push-action@v1.1.0
#       with:
#         # Username used to log in to a Docker registry. If not set then no login will occur
#         username: tszkan # optional
#         # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
#         password: ${{ secrets.DOCKER_PASSWORD }} # optional
#         # Server address of Docker registry. If not set then will default to Docker Hub
#         registry: docker.io # optional
#         # Docker repository to tag the image with
#         repository: mkjiau/etoro-api
#         # Automatically tags the built image with the git reference as per the readme
#         tag_with_ref: true # optional

    - name: Job completed
      run: |
        echo Docker build completed, 
        echo Image push completed.
